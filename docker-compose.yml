version: '3'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn --bind 0.0.0.0:8000 Rental.wsgi:application"
    env_file:
      - .env
    volumes:
      - ./Rental:/Rental
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    networks:
      - webnet  


  rabbitmq:
    image: 'rabbitmq:3.8'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"     # порт для AMQP
      - "15672:15672"   # порт для RabbitMQ Management UI
    networks:
      - webnet        
  

  nginx:
    restart: always
    image: nginx:latest
    ports:
      - "80:80"

# монтируем только те директории, в которых лежит статика, т.к. nginx с динамикой не будет работать.
#Также директорию с логами и файл настройки, который мы подготовили.
    volumes:
        - static_volume:/srv/www/Rental/static
        - media_volume:/srv/www/Rental/media
        - logs_volume:/srv/www/Rental/logs
        - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - web
    networks:
      - webnet        


  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webnet        
    ports:
      - "5432:5432"  


  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A Rental worker --loglevel=info
    volumes:
      - .:/Rental
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    networks:
      - webnet


  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A Rental beat --loglevel=info
    volumes:
      - .:/Rental
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    networks:
      - webnet


volumes:
  postgres_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  webnet: